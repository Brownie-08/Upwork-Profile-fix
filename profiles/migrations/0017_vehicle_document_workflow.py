# Generated by Django 4.2.11 on 2025-08-17 15:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import profiles.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("profiles", "0016_referral_system"),
    ]

    operations = [
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "doc_type",
                    models.CharField(
                        choices=[
                            ("ROADWORTHY", "Roadworthiness Certificate"),
                            ("BLUEBOOK", "Registration Certificate (Blue Book)"),
                            ("DRIVER_LICENSE", "Driver's License"),
                            ("PERMIT", "PSV Permit"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=profiles.models.document_file_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "pdf"]
                            )
                        ],
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        blank=True,
                        help_text="Leave blank for user-only documents like driver's license",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generic_documents",
                        to="profiles.vehicle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VehicleOwnership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "plate_number",
                    models.CharField(
                        help_text="License plate in Eswatini format",
                        max_length=15,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="License plate must follow Eswatini format (e.g., JSD 123 AM)",
                                regex="^[A-Z]SD\\s\\d{3}\\s[A-Z]{2}$",
                            )
                        ],
                    ),
                ),
                ("make", models.CharField(blank=True, max_length=50)),
                ("model", models.CharField(blank=True, max_length=50)),
                ("year", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "vehicle_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CAR", "Car"),
                            ("VAN", "Van"),
                            ("TRUCK", "Truck"),
                            ("MOTORCYCLE", "Motorcycle"),
                            ("TAXI", "Taxi"),
                            ("DELIVERY", "Delivery Vehicle"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_vehicles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["owner"], name="profiles_ve_owner_i_875fb6_idx"
                    ),
                    models.Index(
                        fields=["plate_number"], name="profiles_ve_plate_n_7475ec_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="profiles_ve_created_b5f5c2_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DocumentReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Review"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        blank=True, help_text="Required when rejecting a document"
                    ),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "document",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="profiles.document",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin user who reviewed this document",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status"], name="profiles_do_status_443f5d_idx"
                    ),
                    models.Index(
                        fields=["reviewed_at"], name="profiles_do_reviewe_38baee_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="profiles_do_created_d9625e_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["user", "doc_type"], name="profiles_do_user_id_1e12c5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["vehicle", "doc_type"], name="profiles_do_vehicle_cd888a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["uploaded_at"], name="profiles_do_uploade_3ffdb2_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="document",
            unique_together={("user", "vehicle", "doc_type")},
        ),
    ]
