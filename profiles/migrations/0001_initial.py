# Generated by Django 3.2.25 on 2025-01-27 11:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(blank=True, default="", max_length=20)),
                (
                    "middle_name",
                    models.CharField(blank=True, default="", max_length=20),
                ),
                ("last_name", models.CharField(blank=True, default="", max_length=20)),
                ("bio", models.TextField(blank=True, default="", max_length=500)),
                (
                    "profile_picture",
                    models.ImageField(default="default.jpg", upload_to="profile_pics"),
                ),
                ("skills", models.CharField(blank=True, default="", max_length=200)),
                ("portfolio_link", models.URLField(blank=True)),
                (
                    "hourly_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=6),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999 9999 9999'. Up to 12 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Professional title, e.g. 'Senior Web Developer'",
                        max_length=200,
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=200)),
                (
                    "languages",
                    models.CharField(
                        blank=True,
                        help_text="Languages spoken, comma separated",
                        max_length=200,
                    ),
                ),
                ("linkedin_profile", models.URLField(blank=True)),
                ("github_profile", models.URLField(blank=True)),
                ("years_of_experience", models.PositiveIntegerField(default=0)),
                ("total_projects", models.PositiveIntegerField(default=0)),
                (
                    "success_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "preferred_project_size",
                    models.CharField(
                        choices=[
                            ("SMALL", "Small"),
                            ("MEDIUM", "Medium"),
                            ("LARGE", "Large"),
                            ("ANY", "Any Size"),
                        ],
                        default="ANY",
                        max_length=20,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        default="O",
                        max_length=15,
                    ),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("REGULAR", "Regular User"),
                            ("TAXI", "Taxi Owner"),
                            ("DELIVERY", "Delivery Service Provider"),
                        ],
                        default="REGULAR",
                        max_length=10,
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("VERIFIED", "Verified"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "id_document",
                    models.FileField(
                        blank=True, null=True, upload_to="verification_docs/id/"
                    ),
                ),
                (
                    "business_license",
                    models.FileField(
                        blank=True, null=True, upload_to="verification_docs/business/"
                    ),
                ),
                (
                    "insurance_document",
                    models.FileField(
                        blank=True, null=True, upload_to="verification_docs/insurance/"
                    ),
                ),
                (
                    "background_check_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PASSED", "Passed"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("background_check_date", models.DateTimeField(blank=True, null=True)),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("total_reviews", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("category", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vehicle_type",
                    models.CharField(
                        choices=[
                            ("CAR", "Car"),
                            ("VAN", "Van"),
                            ("TRUCK", "Truck"),
                            ("MOTORCYCLE", "Motorcycle"),
                        ],
                        max_length=20,
                    ),
                ),
                ("make", models.CharField(max_length=50)),
                ("model", models.CharField(max_length=50)),
                ("year", models.PositiveIntegerField()),
                ("license_plate", models.CharField(max_length=20)),
                (
                    "registration",
                    models.FileField(upload_to="vehicle_docs/registration/"),
                ),
                ("insurance", models.FileField(upload_to="vehicle_docs/insurance/")),
                (
                    "inspection_certificate",
                    models.FileField(upload_to="vehicle_docs/inspection/"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("last_inspection_date", models.DateField()),
                ("next_inspection_date", models.DateField()),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaxiVerificationDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("ID", "Government ID"),
                            ("CURRENT_PHOTO", "Current Photo"),
                            ("LICENSE", "Business License"),
                            ("INSURANCE", "Insurance"),
                            ("BACKGROUND", "Background Check"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("document", models.FileField(upload_to="verification_docs/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification_documents",
                        to="profiles.profile",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Portfolio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("project_url", models.URLField(blank=True)),
                ("image", models.ImageField(blank=True, upload_to="portfolio_images/")),
                ("completion_date", models.DateField()),
                ("technologies_used", models.CharField(max_length=500)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolio_items",
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("company", models.CharField(max_length=200)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("current", models.BooleanField(default=False)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("description", models.TextField()),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experiences",
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("institution", models.CharField(max_length=200)),
                ("degree", models.CharField(max_length=200)),
                ("field_of_study", models.CharField(max_length=200)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("current", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="education",
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Education",
            },
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("available_for_work", models.BooleanField(default=True)),
                ("hours_per_week", models.PositiveIntegerField(default=40)),
                (
                    "preferred_contract_type",
                    models.CharField(
                        choices=[
                            ("FULL_TIME", "Full Time"),
                            ("PART_TIME", "Part Time"),
                            ("CONTRACT", "Contract"),
                            ("HOURLY", "Hourly"),
                        ],
                        default="FULL_TIME",
                        max_length=20,
                    ),
                ),
                (
                    "notice_period",
                    models.PositiveIntegerField(
                        default=7, help_text="Notice period in days"
                    ),
                ),
                (
                    "profile",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability",
                        to="profiles.profile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProfileSkill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "proficiency",
                    models.CharField(
                        choices=[
                            ("BEG", "Beginner"),
                            ("INT", "Intermediate"),
                            ("ADV", "Advanced"),
                            ("EXP", "Expert"),
                        ],
                        max_length=3,
                    ),
                ),
                ("verified", models.BooleanField(default=False)),
                ("years_of_experience", models.PositiveIntegerField(default=0)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_skills",
                        to="profiles.profile",
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="profiles.skill"
                    ),
                ),
            ],
            options={
                "unique_together": {("profile", "skill")},
            },
        ),
    ]
