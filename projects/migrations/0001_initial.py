# Generated by Django 3.2.25 on 2025-01-27 11:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("budget", models.DecimalField(decimal_places=2, max_digits=10)),
                ("start_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DISCUSSION", "In Discussion"),
                            ("OPEN", "Open"),
                            ("IN_PROGRESS", "In Progress"),
                            ("REVIEW", "Under Review"),
                            ("COMPLETED", "Completed"),
                            ("DISPUTED", "Disputed"),
                        ],
                        default="OPEN",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("deadline", models.DateField()),
                ("completion_date", models.DateField(blank=True, null=True)),
                ("client_confirmed", models.BooleanField(default=False)),
                ("freelancer_confirmed", models.BooleanField(default=False)),
                (
                    "final_payment",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("WEB_DEVELOPMENT", "Web Development"),
                            ("GRAPHIC_DESIGN", "Graphic Design"),
                            ("CONTENT_WRITING", "Content Writing"),
                            ("MARKETING", "Marketing"),
                            ("HOMEWORK", "Homework"),
                            ("MOBILE_APP_DEV", "Mobile App Development"),
                            ("DATA_ANALYSIS", "Data Analysis"),
                            ("TAXI", "Taxi Service"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        help_text="Specify the type of service this project falls under",
                        max_length=50,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("FIXED", "Fixed Price"),
                            ("HOURLY", "Hourly Rate"),
                            ("MILESTONE", "Milestone Payment"),
                        ],
                        default="FIXED",
                        help_text="Specify the payment method for this project",
                        max_length=20,
                    ),
                ),
                (
                    "project_files",
                    models.FileField(
                        blank=True,
                        help_text="Upload related files for the project",
                        null=True,
                        upload_to="project_files/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "txt",
                                    "png",
                                    "jpg",
                                    "jpeg",
                                ]
                            )
                        ],
                    ),
                ),
                (
                    "max_file_size",
                    models.PositiveIntegerField(
                        default=5242880, help_text="Maximum file size allowed in bytes"
                    ),
                ),
                (
                    "allowed_file_types",
                    models.CharField(
                        default="pdf,doc,docx,txt,png,jpg,jpeg",
                        help_text="Comma-separated list of allowed file extensions",
                        max_length=200,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "freelancer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="freelancer_projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Proposal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("proposal_text", models.TextField()),
                ("bid_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("accepted", models.BooleanField(default=False)),
                (
                    "max_file_size",
                    models.PositiveIntegerField(
                        default=10485760, help_text="Maximum file size allowed per file"
                    ),
                ),
                (
                    "max_files",
                    models.PositiveIntegerField(
                        default=5,
                        help_text="Maximum number of files allowed per proposal",
                    ),
                ),
                (
                    "freelancer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposals",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "unique_together": {("project", "freelancer")},
            },
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rater_type",
                    models.CharField(
                        choices=[("CLIENT", "Client"), ("FREELANCER", "Freelancer")],
                        max_length=10,
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        help_text="Rating should be between 1 and 5 stars.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Optional comment about the project.",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="projects.project",
                    ),
                ),
                (
                    "rated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="given_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProposalFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="proposal_files/%Y/%m/%d/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=[
                                    "pdf",
                                    "doc",
                                    "docx",
                                    "txt",
                                    "png",
                                    "jpg",
                                    "jpeg",
                                    "zip",
                                ]
                            )
                        ],
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Brief description of the sample work"
                    ),
                ),
                ("upload_date", models.DateTimeField(auto_now_add=True)),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="File size in bytes"),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="projects.proposal",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="project_files/%Y/%m/%d/")),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                ("upload_date", models.DateTimeField(auto_now_add=True)),
                ("file_type", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="projects.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="projects.project",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("project", "reviewer", "recipient")},
            },
        ),
    ]
