# Generated by Django 4.2.11 on 2025-08-24 16:43

from django.db import migrations


def migrate_profile_notifications(apps, schema_editor):
    """Migrate notifications from profiles.Notification to notifications.Notification"""
    # Get the models - use historical versions from migration context
    ProfileNotification = apps.get_model("profiles", "Notification")
    NotificationModel = apps.get_model("notifications", "Notification")

    # Migrate all profile notifications
    for profile_notification in ProfileNotification.objects.all():
        # Create equivalent notification in the main model
        NotificationModel.objects.create(
            user=profile_notification.user,
            title=(
                profile_notification.message[:50] + "..."
                if len(profile_notification.message) > 50
                else profile_notification.message
            ),
            message=profile_notification.message,
            created_at=profile_notification.timestamp,
            is_read=profile_notification.is_read,
            notification_type="general",  # Default type for migrated notifications
        )

    print(
        f"Migrated {ProfileNotification.objects.count()} notifications from profiles to notifications app"
    )


def reverse_migrate_notifications(apps, schema_editor):
    """Reverse migration - move notifications back (if needed)"""
    # This is a one-way migration - we won't reverse it
    # since we're consolidating to avoid duplication
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("notifications", "0005_alter_notification_notification_type_and_more"),
        ("profiles", "__latest__"),  # Ensure profiles migrations are applied
    ]

    operations = [
        migrations.RunPython(
            migrate_profile_notifications,
            reverse_migrate_notifications,
        ),
    ]
